syntax = "proto3";
package gravity.v1;

import "gravity/v1/genesis.proto";
import "gravity/v1/gravity.proto";
import "gravity/v1/confirm.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/cosmos/gravity-bridge/module/x/gravity/types";

// Query defines the gRPC querier service
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gravity/v1beta/params";
  }
  rpc QuerySignerSetConfirmsRequest(QuerySignerSetConfirmsRequest) returns (QuerySignerSetConfirmsResponse) {
    option (google.api.http).get = "/gravity/v1beta/confirms/signerset/{nonce}/{validator}";
  }
  rpc QueryBatchConfirmsRequest(QueryBatchConfirmsRequest) returns (QueryBatchConfirmsResponse) {
    option (google.api.http).get = "/gravity/v1beta/confirms/batch/{nonce}/{token_address}";
  }
  rpc QueryLogicCallConfirmsRequest(QueryLogicCallConfirmsRequest) returns (QueryLogicCallConfirmsResponse) {
    option (google.api.http).get = "/gravity/v1beta/confirms/logiccall/{invalidation_id}/{invalidation_nonce}";
  }
  // rpc CurrentValset(QueryCurrentValsetRequest) returns (QueryCurrentValsetResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/valset/current";
  // }
  // rpc ValsetRequest(QueryValsetRequestRequest) returns (QueryValsetRequestResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/valset";
  // }
  // rpc ValsetConfirm(QueryValsetConfirmRequest) returns (QueryValsetConfirmResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/valset/confirm";
  // }
  // rpc ValsetConfirmsByNonce(QueryValsetConfirmsByNonceRequest) returns (QueryValsetConfirmsByNonceResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/confirms/{nonce}";
  // }
  // rpc LastValsetRequests(QueryLastValsetRequestsRequest) returns (QueryLastValsetRequestsResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/valset/requests";
  // }
  // rpc LastPendingValsetRequestByAddr(QueryLastPendingValsetRequestByAddrRequest) returns (QueryLastPendingValsetRequestByAddrResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/valset/last";
  // }
  // rpc LastPendingBatchRequestByAddr(QueryLastPendingBatchRequestByAddrRequest) returns (QueryLastPendingBatchRequestByAddrResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/batch/{address}";
  // }
  // rpc LastPendingLogicCallByAddr(QueryLastPendingLogicCallByAddrRequest) returns (QueryLastPendingLogicCallByAddrResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/logic/{address}";
  // }
  // rpc LastEventNonceByAddr(QueryLastEventNonceByAddrRequest) returns (QueryLastEventNonceByAddrResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/oracle/eventnonce/{address}";
  // }
  // rpc BatchFees(QueryBatchFeeRequest) returns (QueryBatchFeeResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/batchfees";
  // }

  // rpc OutgoingTxBatches(QueryOutgoingTxBatchesRequest) returns (QueryOutgoingTxBatchesResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/batch/outgoingtx";
  // }
  // rpc OutgoingLogicCalls(QueryOutgoingLogicCallsRequest) returns (QueryOutgoingLogicCallsResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/batch/outgoinglogic";
  // }
  // rpc BatchRequestByNonce(QueryBatchRequestByNonceRequest) returns (QueryBatchRequestByNonceResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/batch/{nonce}";
  // }
  // rpc ERC20ToDenom(QueryERC20ToDenomRequest) returns (QueryERC20ToDenomResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/cosmos_originated/erc20_to_denom";
  // }
  // rpc DenomToERC20(QueryDenomToERC20Request) returns (QueryDenomToERC20Response) {
  //   option (google.api.http).get = "/gravity/v1beta/cosmos_originated/denom_to_erc20";
  // }

  rpc GetDelegateKeyByValidator(QueryDelegateKeysByValidatorAddress) returns (QueryDelegateKeysByValidatorAddressResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_delegate_keys_by_validator";
  }
  rpc GetDelegateKeyByEth(QueryDelegateKeysByEthAddress) returns (QueryDelegateKeysByEthAddressResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_delegate_keys_by_eth";
  }
  rpc GetDelegateKeyByOrchestrator(QueryDelegateKeysByOrchestratorAddress) returns (QueryDelegateKeysByOrchestratorAddressResponse) {
    option (google.api.http).get = "/gravity/v1beta/query_delegate_keys_by_orchestrator";
  }

  // rpc GetPendingSendToEth(QueryPendingSendToEth) returns (QueryPendingSendToEthResponse) {
  //   option (google.api.http).get = "/gravity/v1beta/query_pending_send_to_eth";
  // }
}

message QueryParamsRequest {}
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryDelegateKeysByValidatorAddress {
  string validator_address = 1;
}
message QueryDelegateKeysByValidatorAddressResponse {
  string eth_address          = 1;
  string orchestrator_address = 2;
}

message QueryDelegateKeysByEthAddress {
  string eth_address = 1;
}
message QueryDelegateKeysByEthAddressResponse {
  string validator_address    = 1;
  string orchestrator_address = 2;
}

message QueryDelegateKeysByOrchestratorAddress {
  string orchestrator_address = 1;
}
message QueryDelegateKeysByOrchestratorAddressResponse {
  string validator_address = 1;
  string eth_address       = 2;
}

message QuerySignerSetConfirmsRequest {
  uint64 nonce     = 1;
  string validator = 2;
}
message QuerySignerSetConfirmsResponse {
  repeated ConfirmSignerSet signersets = 1;
}

message QueryBatchConfirmsRequest {
  uint64 nonce         = 1;
  string token_address = 2;
}
message QueryBatchConfirmsResponse {
  repeated ConfirmBatch confirms = 1;
}

message QueryLogicCallConfirmsRequest {
  bytes invalidation_id = 1;
  uint64 invalidation_nonce = 2;
}
message QueryLogicCallConfirmsResponse {
  repeated ConfirmLogicCall confirms = 1;
}